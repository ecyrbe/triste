{"version":3,"sources":["components/board.module.css","utils/classnames.ts","utils/range.ts","components/cell.tsx","hooks/interval.ts","hooks/score.ts","hooks/tetrominos.ts","components/stats.tsx","components/next.tsx","components/help.tsx","components/board.tsx","hooks/keyboard.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cn","names","join","range","start","end","length","Array","from","_","i","TetrominoStyles","Cell","React","memo","value","className","style","square","internSquare","useInterval","callback","delay","cb","useRef","useEffect","current","id","setInterval","clearInterval","rates","Math","floor","points","useScore","useState","lines","setLines","score","setScore","level","setLevel","rate","setRate","updateScore","useCallback","n","nlines","nlevel","nrate","prev","TetrisState","tetrominos","shapes","I","J","L","O","S","T","Z","positions","x","y","getInitBoard","width","height","fill","map","line","getRandomTetromino","random","getTetrominoShape","t","rotation","isInShape","shape","posX","posY","isShapeCollidingWithBoard","board","some","j","undefined","merge","l","clearLines","clearedBoard","filter","cleared","splice","Stats","descriptions","scores","border","values","Next","computeColor","key","blockLine","Help","commands","instructions","Board","props","paused","state","setState","setBoard","currentTetromino","setCurrent","nextTetromino","setNext","setX","setY","setRotation","checkY","setCheckY","togglePause","gameover","running","reset","next","rotate","rotatedShape","left","right","down","saveboard","useTetris","nextShape","useMemo","currentShape","computeNextColor","codes","options","keydown","keyup","downHandler","event","includes","code","upHandler","window","addEventListener","removeEventListener","useKeyBoard","preventDefault","game","over","color","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b8a18bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"board_game__133qm\",\"over\":\"board_over__ZBIGv\",\"paused\":\"board_paused__22pYZ\",\"running\":\"board_running__3HKDn\",\"board\":\"board_board__5xYAb\",\"border\":\"board_border__3Hrc3\",\"lines\":\"board_lines__K2aWm\",\"blockLine\":\"board_blockLine__2Shsx\",\"next\":\"board_next__zhgk4\",\"square\":\"board_square__19hXC\",\"none\":\"board_none__25BgY\",\"I\":\"board_I__v5VWo\",\"J\":\"board_J__333YF\",\"L\":\"board_L__3tq8V\",\"O\":\"board_O__1CzkM\",\"S\":\"board_S__2T1KA\",\"T\":\"board_T__-Esw_\",\"Z\":\"board_Z__2VCFE\",\"internSquare\":\"board_internSquare__3Bn7h\",\"commands\":\"board_commands__2BLja\",\"descriptions\":\"board_descriptions__1dhGE\",\"instructions\":\"board_instructions__E5mVe\",\"scores\":\"board_scores__2Bjqx\",\"values\":\"board_values__1lHjc\"};","export const cn = (...names: string[]) => names.join(\" \");\n","export const range = (start: number, end: number, length = end - start + 1) =>\n  Array.from({ length }, (_, i) => start + i);\n","import React from \"react\";\nimport style from \"./board.module.css\";\nimport { cn } from \"../utils\";\n\nconst TetrominoStyles = [\"none\", \"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"] as const;\n\nfunction Square({ value }: { value: number }) {\n  return (\n    <div className={cn(style.square, style[TetrominoStyles[value]])}>\n      <div className={cn(style.internSquare, style[TetrominoStyles[value]])} />\n    </div>\n  );\n}\n\nexport const Cell = React.memo(Square);\n","import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback: () => void, delay: number) {\n  const cb = useRef(callback);\n\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const tick = () => cb.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [cb, delay]);\n}\n","import { useState, useCallback } from \"react\";\n\n/**\n * original gameboy drop rates\n * @see https://tetris.fandom.com/wiki/Tetris_(Game_Boy)\n */\nconst rates = [\n  Math.floor((1000 * 53) / 60), //level 8\n  Math.floor((1000 * 49) / 60), //level 1\n  Math.floor((1000 * 45) / 60), //level 2\n  Math.floor((1000 * 41) / 60), //level 3\n  Math.floor((1000 * 37) / 60), //level 4\n  Math.floor((1000 * 33) / 60), //level 5\n  Math.floor((1000 * 28) / 60), //level 6\n  Math.floor((1000 * 22) / 60), //level 7\n  Math.floor((1000 * 17) / 60), //level 8\n  Math.floor((1000 * 11) / 60), //level 9\n  Math.floor((1000 * 10) / 60), //level 10\n  Math.floor((1000 * 9) / 60), //level 11\n  Math.floor((1000 * 8) / 60), //level 12\n  Math.floor((1000 * 7) / 60), //level 13\n  Math.floor((1000 * 6) / 60), //level 14\n  Math.floor((1000 * 6) / 60), //level 15\n  Math.floor((1000 * 5) / 60), //level 16\n  Math.floor((1000 * 5) / 60), //level 17\n  Math.floor((1000 * 4) / 60), //level 18\n  Math.floor((1000 * 4) / 60), //level 19\n  Math.floor((1000 * 3) / 60), //level 20\n  Math.floor((1000 * 2) / 60), //level 21\n  Math.floor((1000 * 1) / 60), //level 22\n];\nconst points = [0, 40, 100, 300, 1200];\n\nexport function useScore() {\n  const [lines, setLines] = useState(0);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(0);\n  const [rate, setRate] = useState(rates[0]);\n\n  const updateScore = useCallback(\n    (n: number) => {\n      const nlines = lines + n;\n      const nlevel = Math.floor(nlines / 10);\n      const nrate = rates[nlevel];\n      setLines(nlines);\n      setLevel(nlevel);\n      setRate(nrate);\n      setScore((prev) => prev + (nlevel + 1) * points[n]);\n    },\n    [lines]\n  );\n\n  return { lines, score, level, rate, updateScore };\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport { useInterval } from \"./interval\";\nimport { useScore } from \"./score\";\n\nconst tetrominos = [\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"] as const;\n\n/**\n * We are using modern SRS rotation system\n * @See https://tetris.fandom.com/wiki/SRS\n */\nconst shapes = {\n  I: [\n    [\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n    ],\n    [\n      [0, 0, 1],\n      [0, 0, 1],\n      [0, 0, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n    ],\n    [\n      [0, 1],\n      [0, 1],\n      [0, 1],\n      [0, 1],\n    ],\n  ],\n  J: [\n    [\n      [2, 0, 0],\n      [2, 2, 2],\n    ],\n    [\n      [0, 2, 2],\n      [0, 2, 0],\n      [0, 2, 0],\n    ],\n    [\n      [0, 0, 0],\n      [2, 2, 2],\n      [0, 0, 2],\n    ],\n    [\n      [0, 2],\n      [0, 2],\n      [2, 2],\n    ],\n  ],\n  L: [\n    [\n      [0, 0, 3],\n      [3, 3, 3],\n    ],\n    [\n      [0, 3, 0],\n      [0, 3, 0],\n      [0, 3, 3],\n    ],\n    [\n      [0, 0, 0],\n      [3, 3, 3],\n      [3, 0, 0],\n    ],\n    [\n      [3, 3],\n      [0, 3],\n      [0, 3],\n    ],\n  ],\n  O: [\n    [\n      [0, 4, 4],\n      [0, 4, 4],\n    ],\n  ],\n  S: [\n    [\n      [0, 5, 5],\n      [5, 5, 0],\n    ],\n    [\n      [0, 5, 0],\n      [0, 5, 5],\n      [0, 0, 5],\n    ],\n    [\n      [0, 0, 0],\n      [0, 5, 5],\n      [5, 5, 0],\n    ],\n    [\n      [5, 0],\n      [5, 5],\n      [0, 5],\n    ],\n  ],\n  T: [\n    [\n      [0, 6, 0],\n      [6, 6, 6],\n    ],\n    [\n      [0, 6, 0],\n      [0, 6, 6],\n      [0, 6, 0],\n    ],\n    [\n      [0, 0, 0],\n      [6, 6, 6],\n      [0, 6, 0],\n    ],\n    [\n      [0, 6],\n      [6, 6],\n      [0, 6],\n    ],\n  ],\n  Z: [\n    [\n      [7, 7, 0],\n      [0, 7, 7],\n    ],\n    [\n      [0, 0, 7],\n      [0, 7, 7],\n      [0, 7, 0],\n    ],\n    [\n      [0, 0, 0],\n      [7, 7, 0],\n      [0, 7, 7],\n    ],\n    [\n      [0, 7],\n      [7, 7],\n      [7, 0],\n    ],\n  ],\n};\n\nconst positions = {\n  I: { x: 3, y: -2 },\n  J: { x: 4, y: -2 },\n  L: { x: 4, y: -2 },\n  O: { x: 3, y: -2 },\n  S: { x: 4, y: -2 },\n  T: { x: 4, y: -2 },\n  Z: { x: 4, y: -2 },\n};\nexport type Tetromino = typeof tetrominos[number];\n\nexport enum TetrisState {\n  running,\n  paused,\n  gameover,\n}\n\nfunction getInitBoard(width: number, height: number) {\n  return new Array<Array<number>>(height)\n    .fill(new Array<number>(width))\n    .map((line) => line.fill(0));\n}\n\nfunction getRandomTetromino() {\n  return tetrominos[Math.floor(Math.random() * Math.floor(tetrominos.length))];\n}\n\n/**\n * get the shape of the given tetromino\n * @param t a tetromino\n */\nexport function getTetrominoShape(t: Tetromino, rotation = 0) {\n  return shapes[t][rotation];\n}\n\n/**\n * check if a given point from the board is in a given shape\n * @param shape the shape to check a position against\n * @param posX horizontal position of the shape in the board\n * @param posY vertical position of the shape in the board\n * @param x horizontal position in the board to check\n * @param y vertical position in the board to check\n */\nexport function isInShape(\n  shape: number[][],\n  posX: number,\n  posY: number,\n  x: number,\n  y: number\n) {\n  return x >= posX &&\n    x < posX + shape[0].length &&\n    y >= posY &&\n    y < posY + shape.length\n    ? shape[y - posY][x - posX]\n    : 0;\n}\n\nfunction isShapeCollidingWithBoard(\n  board: number[][],\n  shape: number[][],\n  x: number,\n  y: number\n) {\n  return shape.some((line, j) =>\n    line.some(\n      (value, i) =>\n        value > 0 &&\n        y + j >= 0 &&\n        (board[y + j] === undefined ||\n          board[y + j][x + i] === undefined ||\n          board[y + j][x + i] > 0)\n    )\n  );\n}\n\nfunction merge(board: number[][], shape: number[][], x: number, y: number) {\n  return board.map((line, l) =>\n    line.map((value, i) => value + isInShape(shape, x, y, i, l))\n  );\n}\n\nfunction clearLines(board: number[][]) {\n  const lines = board.length;\n  const clearedBoard = board.filter((line) =>\n    line.some((value) => value === 0)\n  );\n  const cleared = lines - clearedBoard.length;\n  if (cleared > 0) {\n    clearedBoard.splice(\n      0,\n      0,\n      ...getInitBoard(board[0].length, lines - clearedBoard.length)\n    );\n    return { board: clearedBoard, cleared };\n  }\n  return { board, cleared };\n}\n\n/**\n * create a full tetris game state\n * @param width width of tetris\n * @param height height of tetris\n */\nexport const useTetris = (width = 10, height = 20) => {\n  const [state, setState] = useState(TetrisState.paused);\n  const [board, setBoard] = useState(() => getInitBoard(width, height));\n  const [currentTetromino, setCurrent] = useState(getRandomTetromino);\n  const [nextTetromino, setNext] = useState(getRandomTetromino);\n  const [posX, setX] = useState(positions[currentTetromino].x);\n  const [posY, setY] = useState(positions[currentTetromino].y);\n  const [rotation, setRotation] = useState(0);\n  const [checkY, setCheckY] = useState(-1);\n  const { lines, level, score, rate, updateScore } = useScore();\n\n  const togglePause = () =>\n    setState((prev) =>\n      prev === TetrisState.gameover\n        ? prev\n        : prev === TetrisState.paused\n        ? TetrisState.running\n        : TetrisState.paused\n    );\n  const reset = useCallback(() => {\n    setNext((prev) => {\n      setRotation(0);\n      setX(positions[prev].x);\n      setY(positions[prev].y);\n      setCurrent(prev);\n      return getRandomTetromino();\n    });\n    setBoard(getInitBoard(width, height));\n    setState(TetrisState.running);\n  }, [width, height]);\n\n  const next = useCallback(() => {\n    if (state === TetrisState.running)\n      setNext((prev) => {\n        setRotation(0);\n        setX(positions[prev].x);\n        setY(positions[prev].y);\n        setCurrent(prev);\n        return getRandomTetromino();\n      });\n  }, [state]);\n\n  const rotate = useCallback(() => {\n    if (state === TetrisState.running)\n      setRotation((prev) => {\n        const rotate = (prev + 1) % shapes[currentTetromino].length;\n        const rotatedShape = shapes[currentTetromino][rotate];\n        return isShapeCollidingWithBoard(board, rotatedShape, posX, posY)\n          ? prev\n          : rotate;\n      });\n  }, [state, board, currentTetromino, posX, posY]);\n  const left = useCallback(() => {\n    if (state === TetrisState.running)\n      setX((prev) =>\n        isShapeCollidingWithBoard(\n          board,\n          shapes[currentTetromino][rotation],\n          prev - 1,\n          posY\n        )\n          ? prev\n          : prev - 1\n      );\n  }, [state, board, currentTetromino, rotation, posY]);\n  const right = useCallback(() => {\n    if (state === TetrisState.running)\n      setX((prev) =>\n        isShapeCollidingWithBoard(\n          board,\n          shapes[currentTetromino][rotation],\n          prev + 1,\n          posY\n        )\n          ? prev\n          : prev + 1\n      );\n  }, [state, board, currentTetromino, rotation, posY]);\n  const down = useCallback(() => {\n    if (state === TetrisState.running) {\n      setCheckY(posY + 1);\n    }\n  }, [state, posY]);\n\n  useEffect(() => {\n    if (checkY === posY + 1) {\n      if (\n        isShapeCollidingWithBoard(\n          board,\n          shapes[currentTetromino][rotation],\n          posX,\n          checkY\n        )\n      ) {\n        const { board: saveboard, cleared } = clearLines(\n          merge(board, shapes[currentTetromino][rotation], posX, posY)\n        );\n        if (saveboard[0].some((value) => value > 0))\n          setState(TetrisState.gameover);\n        else {\n          setBoard(saveboard);\n          if (cleared) updateScore(cleared);\n          next();\n        }\n      } else setY(checkY);\n    }\n  }, [\n    board,\n    currentTetromino,\n    rotation,\n    posX,\n    posY,\n    checkY,\n    next,\n    updateScore,\n  ]);\n\n  useInterval(() => {\n    if (state === TetrisState.running) down();\n  }, rate);\n\n  return {\n    lines,\n    level,\n    score,\n    state,\n    board,\n    currentTetromino,\n    nextTetromino,\n    posX,\n    posY,\n    rotation,\n    next,\n    rotate,\n    left,\n    right,\n    down,\n    togglePause,\n    reset,\n  };\n};\n","import React from \"react\";\nimport style from \"./board.module.css\";\nimport { cn } from \"../utils\";\n\ntype StatsProps = {\n  lines: number;\n  level: number;\n  score: number;\n};\nfunction StatsImpl({ lines, level, score }: StatsProps) {\n  return (\n    <>\n      <div className={style.descriptions}>Stats</div>\n      <div className={cn(style.scores, style.border)}>\n        <div className={style.descriptions}>\n          <div>Lines:</div>\n          <div>Level:</div>\n          <div>Score:</div>\n        </div>\n        <div className={style.values}>\n          <div>{lines}</div>\n          <div>{level}</div>\n          <div>{score}</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport const Stats = React.memo(StatsImpl);\n","import React from \"react\";\nimport { Cell } from \"./cell\";\nimport style from \"./board.module.css\";\nimport { cn, range } from \"../utils\";\n\ntype NextProps = {\n  computeColor: (x: number, y: number) => number;\n};\n\nfunction NextImpl({ computeColor }: NextProps) {\n  return (\n    <>\n      <div className={style.descriptions}>Next</div>\n      <div className={cn(style.lines, style.border)}>\n        {range(1, 4).map((y) => (\n          <div key={y} className={cn(style.blockLine)}>\n            {range(1, 6).map((x) => {\n              return <Cell key={x} value={computeColor(x, y)} />;\n            })}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport const Next = React.memo(NextImpl);\n","import React from \"react\";\nimport style from \"./board.module.css\";\n\nfunction HelpImpl() {\n  return (\n    <div className={style.commands}>\n      <div className={style.descriptions}>\n        <div>&uarr;</div>\n        <div>&larr;&darr;&rarr;</div>\n        <div>escape</div>\n        <div>enter</div>\n        <div>space</div>\n      </div>\n      <div className={style.instructions}>\n        <div> Rotate</div>\n        <div> Move</div>\n        <div> Play/Pause game</div>\n        <div> Restart game</div>\n        <div> Cheat</div>\n      </div>\n    </div>\n  );\n}\n\nexport const Help = React.memo(HelpImpl);\n","import React, { useMemo, useCallback } from \"react\";\nimport { Cell } from \"./cell\";\nimport {\n  useTetris,\n  getTetrominoShape,\n  isInShape,\n  TetrisState,\n} from \"../hooks/tetrominos\";\nimport { useKeyBoard } from \"../hooks/keyboard\";\nimport { cn } from \"../utils\";\nimport style from \"./board.module.css\";\nimport { Stats } from \"./stats\";\nimport { Next } from \"./next\";\nimport { Help } from \"./help\";\n\ntype BoardProps = {\n  width: number;\n  height: number;\n};\n\nexport function Board(props: BoardProps) {\n  const {\n    state,\n    board,\n    lines,\n    level,\n    score,\n    currentTetromino,\n    nextTetromino,\n    posX,\n    posY,\n    rotation,\n    rotate,\n    down,\n    left,\n    right,\n    next,\n    togglePause,\n    reset,\n  } = useTetris(props.width, props.height);\n\n  const nextShape = useMemo(() => getTetrominoShape(nextTetromino), [\n    nextTetromino,\n  ]);\n  const currentShape = useMemo(\n    () => getTetrominoShape(currentTetromino, rotation),\n    [currentTetromino, rotation]\n  );\n\n  const computeNextColor = useCallback(\n    (x: number, y: number) => isInShape(nextShape, 2, 2, x, y),\n    [nextShape]\n  );\n\n  useKeyBoard(\n    (event) => {\n      switch (event.code) {\n        case \"ArrowUp\":\n          rotate();\n          break;\n        case \"ArrowDown\":\n          down();\n          break;\n        case \"ArrowLeft\":\n          left();\n          break;\n        case \"ArrowRight\":\n          right();\n          break;\n        case \"Space\":\n          next();\n          break;\n        case \"Escape\":\n          togglePause();\n          break;\n        case \"Enter\":\n          reset();\n          break;\n      }\n      event.preventDefault();\n    },\n    [\n      \"ArrowUp\",\n      \"ArrowDown\",\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Space\",\n      \"Escape\",\n      \"Enter\",\n    ]\n  );\n\n  return (\n    <div className={cn(style.board)}>\n      <Help />\n      <div\n        className={cn(\n          style.game,\n          state === TetrisState.paused\n            ? style.paused\n            : state === TetrisState.gameover\n            ? style.over\n            : style.running\n        )}\n      >\n        {state === TetrisState.paused\n          ? \"Paused\"\n          : state === TetrisState.gameover\n          ? \"Game Over\"\n          : \"Playing\"}\n\n        <div className={cn(style.lines, style.border)}>\n          {board.map((line, l) => (\n            <div key={l} className={cn(style.blockLine)}>\n              {line.map((value, i) => {\n                const color =\n                  state === TetrisState.gameover\n                    ? 1\n                    : value || isInShape(currentShape, posX, posY, i, l);\n                return <Cell value={color} key={`Cell-${i}${l}${color}`} />;\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={cn(style.next)}>\n        <Stats lines={lines} level={level} score={score} />\n        <Next computeColor={computeNextColor} />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function useKeyBoard(\n  callback: (event: KeyboardEvent) => void,\n  codes: string[],\n  options: {\n    keyup?: boolean;\n    keydown?: boolean;\n  } = { keydown: true, keyup: false }\n) {\n  const cb = useRef(callback);\n\n  useEffect(() => {\n    cb.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const downHandler = (event: KeyboardEvent) => {\n      if (codes.includes(event.code)) {\n        cb.current(event);\n      }\n    };\n    const upHandler = (event: KeyboardEvent) => {\n      if (codes.includes(event.code)) {\n        cb.current(event);\n      }\n    };\n    if (options.keydown) window.addEventListener(\"keydown\", downHandler);\n    if (options.keyup) window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [cb, codes, options.keyup, options.keydown]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Board } from \"./components/board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board width={10} height={20} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}